name: Deploy Express App to EC2 via Docker

# on:
#   push:
#     branches:
#       - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: sites
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-and-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user # Sesuaikan jika berbeda
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Starting deployment on EC2..."
            sudo systemctl start docker || true
            sudo systemctl enable docker || true
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/mypage-porto:latest
            echo "Stopping and removing old container (if any)..."
            docker stop mypage-porto-app || true
            docker rm mypage-porto-app || true
            echo "Running new container..."
            docker run -d \
              --name mypage-porto-app \
              -p ${{ secrets.HOST_PORT }}:${{ secrets.APP_PORT }} \
              --restart always \
              -e NODE_ENV=production \
              -e PORT=${{ vars.PORT }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              ${{ secrets.DOCKER_USERNAME }}/mypage-porto:latest

            echo "Deployment finished. Cleaning up old images..."
            docker image prune -f
            echo "Deployment complete!"